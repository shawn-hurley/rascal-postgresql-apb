- set_fact: 
    generated_user: "{{ lookup('password', '/tmp/gen_user chars=ascii_letters,digits length=8') }}"
    generated_password: "{{ lookup('password', '/tmp/gen_pass chars=ascii_letters,digits') }}"

- name: ensure database is created
  postgresql_db:
    name: "{{ db_creds.POSTGRESQL_DATABASE }}"
    port: "{{ db_creds.POSTGRESQL_PORT }}"
    login_host: "{{ db_creds.POSTGRESQL_HOST }}"
    login_user: "{{ db_creds.POSTGRESQL_USER }}"
    login_password: "{{ db_creds.POSTGRESQL_PASSWORD }}"

- name: create database user
  postgresql_user:
    db: "{{ db_creds.POSTGRESQL_DATABASE }}"
    name: "{{ generated_user }}"
    password: "{{ generated_password }}"
    port: "{{ db_creds.POSTGRESQL_PORT }}"
    login_host: "{{ db_creds.POSTGRESQL_HOST }}"
    login_user: "{{ db_creds.POSTGRESQL_USER }}"
    login_password: "{{ db_creds.POSTGRESQL_PASSWORD }}"
    encrypted: yes

- name: grant owner privillages on database
  postgresql_privs:
    db: "{{ db_creds.POSTGRESQL_DATABASE }}"
    port: "{{ db_creds.POSTGRESQL_PORT }}"
    role: "{{ generated_user }}"
    login_host: "{{ db_creds.POSTGRESQL_HOST }}"
    login_user: "{{ db_creds.POSTGRESQL_USER }}"
    login_password: "{{ db_creds.POSTGRESQL_PASSWORD }}"
    type: database
    privs: ALL

- name: encode bind credentials
  shell: 'echo "{\"POSTGRESQL_HOST\": \"{{ db_creds.POSTGRESQL_HOST }}\", \"POSTGRESQL_PORT\": \"{{ db_creds.POSTGRESQL_PORT }}\", \"POSTGRESQL_USER\": \"{{ generated_user }}\", \"POSTGRESQL_PASSWORD\": \"{{ generated_password }}\", \"POSTGRESQL_DATABASE\": \"{{ db_creds.POSTGRESQL_DATABASE }}\"}" | base64 -w 0'
  register: encoded_bind_credentials

- copy:
    content: "{{ encoded_bind_credentials.stdout }}"
    dest: /var/tmp/bind-creds
